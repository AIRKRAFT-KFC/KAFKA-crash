plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.aircraftcontrol'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Flink
    implementation 'org.apache.flink:flink-streaming-java:1.17.1'
    implementation 'org.apache.flink:flink-clients:1.17.1'
    implementation 'org.apache.flink:flink-connector-kafka:1.17.1'
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

application {
    mainClass = 'com.aircraftcontrol.function.SwiftFlinkJob'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:deprecation']
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

processResources {
    from('src/main/resources') {
        include 'application.properties'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.aircraftcontrol.function.SwiftFlinkJob'
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/INDEX.LIST'
    exclude 'META-INF/versions/9/module-info.class'
    
    enabled = true
    archiveClassifier = 'slim'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.aircraftcontrol.function.SwiftFlinkJob'
    }
    archiveClassifier = 'all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

tasks.withType(JavaExec) {
    maxHeapSize = '512m'
}

test {
    useJUnitPlatform()
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
